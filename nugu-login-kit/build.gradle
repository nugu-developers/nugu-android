apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.nuguVersionCode
        versionName rootProject.nuguVersionName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    if(isReleaseMode) {
        implementation "com.skt.nugu.sdk:nugu-client-kit:$version"
    } else {
        implementation project(':nugu-client-kit')
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.browser:browser:$androidXBrowserVersion"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidXEspressoCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$testJunitKtxVersion"
    testImplementation "androidx.test:core-ktx:$testCoreKtxVersion"

    testImplementation "org.mockito:mockito-core:$mokitoCoreVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mokitoKotlinVersion"
    testImplementation "org.json:json:$jsonVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}

apply from: '../javadoc-android.gradle'
apply from: '../publish-android.gradle'
apply from: '../jacoco.gradle'